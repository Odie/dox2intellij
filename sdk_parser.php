<?php
/*
 * An SDK Parser for documentation generated by doxygen
 * Copyright (C) 2012 by Andrey Gayvoronsky
 * Version: 1.0
 * Email: plandem at gmail dot com
 *
 * Doxygen official site:
 * http://www.stack.nl/~dimitri/doxygen/
 */
class SDKParser
{
	static $CACHE = './cache/';
	static $SDK_URL = null;

	static function getFile($name)
	{
		if (self::$CACHE === null || self::$SDK_URL === null)
			throw new Exception("Wrong settings for parser.");

		if (!file_exists(self::$CACHE . $name)) {
			$html = file_get_contents(self::$SDK_URL . $name);
			file_put_contents(self::$CACHE . $name, $html);
		} else {
			$html = file_get_contents(self::$CACHE . $name);
		}

		return $html;
	}

	static function parse()
	{
		if (self::$CACHE === null || self::$SDK_URL === null)
			throw new Exception("Wrong settings for parser.");

		$html = self::getFile("annotated.html");
		$parser = phpQuery::newDocumentHTML($html);

		//building index
		$index = array();
		foreach ($parser->find('div.contents table:first > tr') as $row) {
			$key = pq($row)->find('td.indexkey');

			//get class info
			$class_name = pq($key)->text();
			$class_url = pq($key)->find('a')->attr('href');

			//get hint for class
			$class_hint = pq($row)->find('td.indexvalue:first')->html();
			$i_table = stripos($class_hint, '<table');
			if ($i_table !== false)
				$class_hint = substr($class_hint, 0, $i_table - 1);

			//get consts/attrs/flags for class
			$property_list = array();
			$found = false;
			foreach (pq($row)->find('td.indexvalue table table tr') as $property_row) {
				$property = pq($property_row)->find("td");
				$property_name = pq($property)->eq(0)->text();
				if (
					(strcasecmp("constants", $property_name) === 0) ||
					(strcasecmp("attributes", $property_name) === 0) ||
					(strcasecmp("flags", $property_name) === 0)
				) {
					$found = true;
					continue;
				}

				if ($found)
					$property_list[$property_name] = trim(pq($property)->eq(1)->text());
			}
			;

			//store constants/attributes/flags of that class
			$index[$class_name] = array(
				'url' => $class_url,
				'hint' => trim(strip_tags($class_hint)),
			);

			if (sizeof($property_list))
				$index[$class_name]['property'] = $property_list;
		}
		unset($html);

		//get list of all members
		foreach ($index as $class_name => $class_info) {
			$info = pathinfo($class_info['url']);

			$html = self::getFile("{$info['filename']}-members.html");
			$parser = phpQuery::newDocumentHTML($html);
			$member_list = array();

			foreach ($parser->find('div.contents table:first > tr.memlist > td:first-child') as $member) {
				$member = pq($member);
				$member_list[$member->text()] = array('url' => $member->find('a')->attr('href'));
			}

			if (sizeof($member_list))
				$index[$class_name]['member'] = $member_list;
		}

		//get list hints for members
		foreach ($index as $class_name => $class_info) {
			if (!isset($class_info['member']))
				continue;

			$old_file = null;
			$parser = null;
			foreach ($class_info['member'] as $member_name => $member_info) {
				list($file, $ref) = explode('#', $member_info['url']);
				if ($file != $old_file) {
					$html = self::getFile($file);
					$parser = phpQuery::newDocumentHTML($html);
				}

				$member_hint = array();
				foreach ($parser->find("a#{$ref}")->next("div.memitem")->find('div.memdoc code') as $function) {
					$member_hint[] = trim(pq($function)->text());
				}
				;

				$index[$class_name]['member'][$member_name]['hint'] = implode(' OR ', $member_hint);
			}
		}

		return $index;
	}
}